[{"/Users/aaronjiang/Projects/smartroom/src/index.js":"1","/Users/aaronjiang/Projects/smartroom/src/App.js":"2","/Users/aaronjiang/Projects/smartroom/src/firebase.js":"3","/Users/aaronjiang/Projects/smartroom/src/views/login.js":"4","/Users/aaronjiang/Projects/smartroom/src/views/index.js":"5","/Users/aaronjiang/Projects/smartroom/src/views/dashboard.js":"6","/Users/aaronjiang/Projects/smartroom/src/views/reset.js":"7","/Users/aaronjiang/Projects/smartroom/src/views/barchart.js":"8","/Users/aaronjiang/Projects/smartroom/src/views/linechart.js":"9","/Users/aaronjiang/Projects/smartroom/src/views/stats.js":"10","/Users/aaronjiang/Projects/smartroom/src/views/rating.js":"11","/Users/aaronjiang/Projects/smartroom/src/views/scale.js":"12"},{"size":254,"mtime":1656886726488,"results":"13","hashOfConfig":"14"},{"size":577,"mtime":1657148745516,"results":"15","hashOfConfig":"14"},{"size":2208,"mtime":1657134295686,"results":"16","hashOfConfig":"14"},{"size":4526,"mtime":1657163756868,"results":"17","hashOfConfig":"14"},{"size":171,"mtime":1657148734351,"results":"18","hashOfConfig":"14"},{"size":3957,"mtime":1657317657122,"results":"19","hashOfConfig":"14"},{"size":1090,"mtime":1656968686731,"results":"20","hashOfConfig":"14"},{"size":2667,"mtime":1657318300155,"results":"21","hashOfConfig":"14"},{"size":1373,"mtime":1657318219080,"results":"22","hashOfConfig":"14"},{"size":1042,"mtime":1657160607079,"results":"23","hashOfConfig":"14"},{"size":3078,"mtime":1657314520679,"results":"24","hashOfConfig":"14"},{"size":836,"mtime":1657149774154,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"k3g1ip",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/aaronjiang/Projects/smartroom/src/index.js",[],[],[],"/Users/aaronjiang/Projects/smartroom/src/App.js",[],[],"/Users/aaronjiang/Projects/smartroom/src/firebase.js",["67","68","69","70","71","72"],[],"import \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  signOut,\n  ver,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  query,\n  getDocs,\n  collection,\n  where,\n  addDoc,\n} from \"firebase/firestore\";\nimport { data } from \"autoprefixer\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  databaseURL: process.env.REACT_APP_databaseURL,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId,\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\n// Get a list of cities from your database\nasync function getCities(db) {\n  const citiesCol = collection(db, \"cities\");\n  const citySnapshot = await getDocs(citiesCol);\n  const cityList = citySnapshot.docs.map((doc) => doc.data());\n  return cityList;\n}\n\n// handles logout\nconst logout = () => {\n  signOut(auth);\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  console.log(email, password);\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email,\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async (email) => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nexport {\n  registerWithEmailAndPassword,\n  logInWithEmailAndPassword,\n  sendPasswordReset,\n  logout,\n  auth,\n  db,\n};\n","/Users/aaronjiang/Projects/smartroom/src/views/login.js",["73","74","75","76"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  auth,\n  logInWithEmailAndPassword,\n  registerWithEmailAndPassword,\n} from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport hero from \"../assets/Saly-10.png\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [registerFlow, setRegisterFlow] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (loading) {\n      // maybe trigger a loading screen\n      return;\n    }\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n\n  const handleClick = () => {\n    if (!registerFlow) {\n      logInWithEmailAndPassword(email, password);\n    } else {\n      if (!/@uwaterloo.ca\\s*$/.test(email)) {\n        alert(\"Must use a uWaterloo email\");\n      } else if (password != password2) {\n        alert(\"Passwords must be equal\");\n      } else {\n        registerWithEmailAndPassword(name, email, password);\n      }\n    }\n  };\n\n  return (\n    <div class=\"hero min-h-screen bg-base-200\">\n      <div class=\"hero-content flex-col lg:flex-row-reverse w-3/4\">\n        <div class=\"mt-12 pl-6 text-center lg:text-left\">\n          <h1 class=\"text-5xl font-['playfair'] lg:text-7xl font-bold\">\n            <span class=\"text-accent\">smart</span>\n            <span>room.</span>\n          </h1>\n          <p class=\"py-4 text-lg\">\n            Optimize your classroom experience through <br />\n            crowd-sourced data visualizations.\n          </p>\n          <img src={hero} class=\"h-64 -mt-16\" />\n        </div>\n        <div class=\"card flex-shrink-0 w-full max-w-sm shadow-2xl bg-base-100\">\n          <div class=\"card-body\">\n            {registerFlow && (\n              <div class=\"form-control\">\n                <label class=\"label\">\n                  <span class=\"label-text\">Name</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={name}\n                  placeholder=\"Enter your Full Name\"\n                  onChange={(e) => setName(e.target.value)}\n                  class=\"input input-bordered\"\n                />\n              </div>\n            )}\n\n            <div class=\"form-control\">\n              <label class=\"label\">\n                <span class=\"label-text\">Email</span>\n              </label>\n              <input\n                type=\"text\"\n                value={email}\n                placeholder=\"Enter your UWaterloo Email\"\n                onChange={(e) => setEmail(e.target.value)}\n                class=\"input input-bordered\"\n              />\n            </div>\n            <div class=\"form-control\">\n              <label class=\"label\">\n                <span class=\"label-text\"> Password </span>\n              </label>\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                class=\"input input-bordered\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n            {registerFlow && (\n              <div class=\"form-control\">\n                <label class=\"label\">\n                  <span class=\"label-text\"> Confirm Password </span>\n                </label>\n                <input\n                  type=\"password\"\n                  placeholder=\"Re-enter Password\"\n                  class=\"input input-bordered\"\n                  value={password2}\n                  onChange={(e) => setPassword2(e.target.value)}\n                />\n              </div>\n            )}\n\n            <label class=\"flex justify-start space-x-4 px-2 py-4\">\n              <button\n                onClick={() => setRegisterFlow(!registerFlow)}\n                class=\"text-left font-bold text-secondary-content\"\n              >\n                {registerFlow ? \"Existing account\" : \"New account\"}\n              </button>\n              <Link to=\"/reset\" label-text-alt link link-hover>\n                Forgot Password\n              </Link>\n            </label>\n            <div class=\"form-control mt-6\">\n              <button onClick={() => handleClick()} class=\"btn btn-primary\">\n                {registerFlow ? \"Sign up\" : \"Login\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n",[],"/Users/aaronjiang/Projects/smartroom/src/views/index.js",[],[],"/Users/aaronjiang/Projects/smartroom/src/views/dashboard.js",["77","78","79","80","81"],[],"/Users/aaronjiang/Projects/smartroom/src/views/reset.js",["82","83"],[],"import React, { useEffect, useState } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { auth, sendPasswordReset } from \"../firebase\";\n\nconst Reset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (loading) return;\n    if (user) navigate(\"/dashboard\");\n  }, [user, loading]);\n\n  return (\n    <div className=\"reset\">\n      <div className=\"reset__container\">\n        <input\n          type=\"text\"\n          className=\"reset__textBox\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"E-mail Address\"\n        />\n        <button className=\"reset__btn\" onClick={() => sendPasswordReset(email)}>\n          Send password reset email\n        </button>\n\n        <div>\n          Don't have an account? <Link to=\"/register\">Register</Link> now.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Reset;\n","/Users/aaronjiang/Projects/smartroom/src/views/barchart.js",["84"],[],"/Users/aaronjiang/Projects/smartroom/src/views/linechart.js",["85"],[],"/Users/aaronjiang/Projects/smartroom/src/views/stats.js",[],[],"/Users/aaronjiang/Projects/smartroom/src/views/rating.js",["86","87","88","89","90","91"],[],"/Users/aaronjiang/Projects/smartroom/src/views/scale.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":7,"column":3,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":11,"column":3,"nodeType":"94","messageId":"95","endLine":11,"endColumn":6},{"ruleId":"92","severity":1,"message":"97","line":15,"column":3,"nodeType":"94","messageId":"95","endLine":15,"endColumn":8},{"ruleId":"92","severity":1,"message":"98","line":18,"column":3,"nodeType":"94","messageId":"95","endLine":18,"endColumn":8},{"ruleId":"92","severity":1,"message":"99","line":21,"column":10,"nodeType":"94","messageId":"95","endLine":21,"endColumn":14},{"ruleId":"92","severity":1,"message":"100","line":39,"column":16,"nodeType":"94","messageId":"95","endLine":39,"endColumn":25},{"ruleId":"92","severity":1,"message":"101","line":17,"column":25,"nodeType":"94","messageId":"95","endLine":17,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":26,"column":6,"nodeType":"104","endLine":26,"endColumn":21,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":34,"column":27,"nodeType":"108","messageId":"109","endLine":34,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":54,"column":11,"nodeType":"112","endLine":54,"endColumn":49},{"ruleId":"92","severity":1,"message":"101","line":13,"column":25,"nodeType":"94","messageId":"95","endLine":13,"endColumn":30},{"ruleId":"92","severity":1,"message":"113","line":14,"column":10,"nodeType":"94","messageId":"95","endLine":14,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":30,"column":36,"nodeType":"116","messageId":"117","endLine":30,"endColumn":38},{"ruleId":"92","severity":1,"message":"118","line":31,"column":27,"nodeType":"94","messageId":"95","endLine":31,"endColumn":28},{"ruleId":"102","severity":1,"message":"119","line":61,"column":6,"nodeType":"104","endLine":61,"endColumn":21,"suggestions":"120"},{"ruleId":"92","severity":1,"message":"101","line":9,"column":25,"nodeType":"94","messageId":"95","endLine":9,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":15,"column":6,"nodeType":"104","endLine":15,"endColumn":21,"suggestions":"121"},{"ruleId":"92","severity":1,"message":"122","line":12,"column":10,"nodeType":"94","messageId":"95","endLine":12,"endColumn":15},{"ruleId":"92","severity":1,"message":"122","line":14,"column":10,"nodeType":"94","messageId":"95","endLine":14,"endColumn":15},{"ruleId":"92","severity":1,"message":"123","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":15},{"ruleId":"92","severity":1,"message":"124","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":19},{"ruleId":"92","severity":1,"message":"125","line":8,"column":10,"nodeType":"94","messageId":"95","endLine":8,"endColumn":15},{"ruleId":"92","severity":1,"message":"101","line":12,"column":25,"nodeType":"94","messageId":"95","endLine":12,"endColumn":30},{"ruleId":"92","severity":1,"message":"113","line":13,"column":10,"nodeType":"94","messageId":"95","endLine":13,"endColumn":14},{"ruleId":"102","severity":1,"message":"119","line":34,"column":6,"nodeType":"104","endLine":34,"endColumn":21,"suggestions":"126"},"no-unused-vars","'signInWithPopup' is defined but never used.","Identifier","unusedVar","'ver' is defined but never used.","'query' is defined but never used.","'where' is defined but never used.","'data' is defined but never used.","'getCities' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["127"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'name' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'_' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchUserName' and 'navigate'. Either include them or remove the dependency array.",["128"],["129"],"'faker' is defined but never used.","'Chart' is defined but never used.","'LineChart' is defined but never used.","'Stats' is defined but never used.",["130"],{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"131","fix":"135"},{"desc":"133","fix":"136"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"137","text":"138"},"Update the dependencies array to be: [user, loading, navigate, fetchUserName]",{"range":"139","text":"140"},{"range":"141","text":"138"},{"range":"142","text":"140"},[798,813],"[user, loading, navigate]",[1806,1821],"[user, loading, navigate, fetchUserName]",[495,510],[1025,1040]]